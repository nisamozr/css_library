@import url("https://api.fontshare.com/css?f[]=general-sans@400,500,600,700&display=swap");
/* veriables
 ============================= 
 */
//  color
$primary-100: #f9f8ff;
$primary-200: #ece8ff;
$primary-300: #dcd5ff;
$primary-400: #a673ef;
$primary-500: #8247e5;
$primary-600: #6433c4;
$primary-700: #4a23a4;
$primary-800: #331684;
$primary-900: #220d6d;
$primary: $primary-500;

$success-100: #ebfcd5;
$success-200: #d4f9ac;
$success-300: #b1ee80;
$success-400: #b1ee80;
$success-500: #5fc92e;
$success-600: #44ac21;
$success-700: #2d9017;
$success-800: #1a740e;
$success-900: #0d6008;
$success: $success-500;

$info-100: #d3e5fe;
$info-200: #a7c9fd;
$info-300: #7ba8f9;
$info-400: #598cf4;
$info-500: #2561ed;
$info-600: #1b4acb;
$info-700: #1236aa;
$info-800: #1236aa;
$info-900: #071971;
$info: $info-500;

$warning-100: #fff5ce;
$warning-200: #ffe89e;
$warning-300: #ffd76d;
$warning-400: #ffc749;
$warning-500: #ffad0d;
$warning-600: #db8c09;
$warning-700: #b76f06;
$warning-800: #935404;
$warning-900: #7a4102;
$warning: $warning-500;

$error-100: #ffe3d6;
$error-200: #ffc0ad;
$error-300: #ff9783;
$error-400: #ff6f65;
$error-500: #ff3236;
$error-600: #db2438;
$error-700: #b71938;
$error-800: #930f35;
$error-900: #7a0933;
$error: $error-500;

$dark-grey-100: #747c90;
$dark-grey-200: #656e85;
$dark-grey-300: #5c657d;
$dark-grey-400: #525c76;
$dark-grey-500: #49536e;
$dark-grey-600: #3a4662;
$dark-grey-700: #2c3857;
$dark-grey-800: #192648;
$dark-grey-900: #0f1d40;
$dark_grey: $dark-grey-500;

$light-grey-100: #fafafb;
$light-grey-200: #f5f6f7;
$light-grey-300: #eeeff2;
$light-grey-400: #e2e4e8;
$light-grey-500: #cacdd5;
$light-grey-600: #b2b7c2;
$light-grey-700: #a4a9b6;
$light-grey-800: #959cab;
$light-grey-900: #8c93a3;
$light_grey: $light-grey-500;

$colors: (
    "primary": $primary,
    "success": $success,
    "info": $info,
    "warning": $warning,
    "error": $error,
    "dark_grey": $dark_grey,
    "light_grey": $light_grey,
) !default;
$primary-colors: (
    "100": $primary-100,
    "200": $primary-200,
    "300": $primary-300,
    "400": $primary-400,
    "500": $primary-500,
    "600": $primary-600,
    "700": $primary-700,
    "800": $primary-800,
    "900": $primary-900,
) !default;
$success-colors: (
    "100": $success-100,
    "200": $success-200,
    "300": $success-300,
    "400": $success-400,
    "500": $success-500,
    "600": $success-600,
    "700": $success-700,
    "800": $success-800,
    "900": $success-900,
) !default;
$success-colors: (
    "100": $success-100,
    "200": $success-200,
    "300": $success-300,
    "400": $success-400,
    "500": $success-500,
    "600": $success-600,
    "700": $success-700,
    "800": $success-800,
    "900": $success-900,
) !default;
$info-colors: (
    "100": $info-100,
    "200": $info-200,
    "300": $info-300,
    "400": $info-400,
    "500": $info-500,
    "600": $info-600,
    "700": $info-700,
    "800": $info-800,
    "900": $info-900,
) !default;
$warning-colors: (
    "100": $warning-100,
    "200": $warning-200,
    "300": $warning-300,
    "400": $warning-400,
    "500": $warning-500,
    "600": $warning-600,
    "700": $warning-700,
    "800": $warning-800,
    "900": $warning-900,
) !default;
$error-colors: (
    "100": $error-100,
    "200": $error-200,
    "300": $error-300,
    "400": $error-400,
    "500": $error-500,
    "600": $error-600,
    "700": $error-700,
    "800": $error-800,
    "900": $error-900,
) !default;
$light-grey-colors: (
    "100": $light-grey-100,
    "200": $light-grey-200,
    "300": $light-grey-300,
    "400": $light-grey-400,
    "500": $light-grey-500,
    "600": $light-grey-600,
    "700": $light-grey-700,
    "800": $light-grey-800,
    "900": $light-grey-900,
) !default;
$dark-grey-colors: (
    "100": $dark-grey-100,
    "200": $dark-grey-200,
    "300": $dark-grey-300,
    "400": $dark-grey-400,
    "500": $dark-grey-500,
    "600": $dark-grey-600,
    "700": $dark-grey-700,
    "800": $dark-grey-800,
    "900": $dark-grey-900,
) !default;
$btn-hover: (
    "primary": $primary-400,
    "success": $success-400,
    "info": $info-400,
    "warning": $warning-400,
    "error": $error-400,
    "dark_grey": $dark-grey-400,
    "light_grey": $light-grey-400,
) !default;
$btn-hover-bg: (
    "primary": $primary-100,
    "success": $success-100,
    "info": $info-100,
    "warning": $warning-100,
    "error": $error-100,
    "dark_grey": $dark-grey-100,
    "light_grey": $light-grey-100,
) !default;
$link-hover-bg: (
    "primary": $primary-300,
    "success": $success-300,
    "info": $info-300,
    "warning": $warning-300,
    "error": $error-300,
    "dark_grey": $dark-grey-300,
    "light_grey": $light-grey-300,
) !default;

/*shadows*/
// ==================
// black shadows
$black-shadwos-z-index-1: 0px 1px 1px rgba(0, 0, 0, 0.08);
$black-shadwos-z-index-2: 0px 2px 3px rgba(0, 0, 0, 0.08);
$black-shadwos-z-index-3: 0px 4px 5px -1px rgba(0, 0, 0, 0.08);
$black-shadwos-z-index-4: 0px 6px 7px -2px rgba(0, 0, 0, 0.08);
$black-shadwos-z-index-5: 0px 8px 11px -3px rgba(0, 0, 0, 0.08);
$black-shadwos-z-index-6: 0px 12px 19px -5px rgba(0, 0, 0, 0.08);
$black-shadwos-z-index-7: 0px 16px 25px -7px rgba(0, 0, 0, 0.1);
$black-shadwos-z-index-8: 0px 24px 33px -9px rgba(0, 0, 0, 0.1);
$black-shadwos-z-index-9: 0px 40px 55px -11px rgba(0, 0, 0, 0.12);
// Purple Shadows
$purple-shadwos-z-index-1: 0px 1px 1px rgba(112, 58, 202, 0.08);
$purple-shadwos-z-index-2: 0px 2px 3px rgba(112, 58, 202, 0.08);
$purple-shadwos-z-index-3: 0px 4px 5px -1px rgba(112, 58, 202, 0.08);
$purple-shadwos-z-index-4: 0px 6px 7px -2px rgba(112, 58, 202, 0.08);
$purple-shadwos-z-index-5: 0px 8px 11px -3px rgba(112, 58, 202, 0.08);
$purple-shadwos-z-index-6: 0px 12px 19px -5px rgba(112, 58, 202, 0.08);
$purple-shadwos-z-index-7: 0px 16px 25px -7px rgba(112, 58, 202, 0.1);
$purple-shadwos-z-index-8: 0px 24px 33px -9px rgba(112, 58, 202, 0.1);
$purple-shadwos-z-index-9: 0px 40px 55px -11px rgba(112, 58, 202, 0.12);

// font
$font-size-base: 1rem;
$font-size-duble-base: 2rem;

$font-size-1: 10px;
$font-size-2: 12px;
$font-size-3: 14px;
$font-size-4: 16px;
$font-size-5: 18px;
$font-size-6: 20px;
$font-size-7: 28px;
$font-size-8: 32px;
$font-size-9: 42px;
$font-size-10: 56px;

$font-size: (
    "1": $font-size-1,
    "2": $font-size-2,
    "3": $font-size-3,
    "4": $font-size-4,
    "5": $font-size-5,
    "6": $font-size-6,
    "7": $font-size-7,
    "8": $font-size-8,
    "9": $font-size-9,
    "10": $font-size-10,
);

// spacing
$spacer: 0.25rem;
$spacers: (
    0: 0,
    1: 0.25rem,
    2: 0.5rem,
    3: 0.75rem,
    4: 1rem,
    5: 1.125rem,
    6: 1.25rem,
    7: 1.5rem,
    8: 1.75rem,
    9: 2rem,
    10: 2.5rem,
    11: 2.625rem,
    12: 3.5rem,
    13: 4rem,
    14: 4.5rem,
);

$border-widths: (
    "0": 0,
    "1": 1px,
    "2": 2px,
    "3": 3px,
    "4": 4px,
    "5": 5px,
);
$border: (
    "border": border,
    "border_top": border-top,
    "border_bottom": border-bottom,
    "border_left": border-left,
    "border_right": border-right,
);
// veriable display width

$grid-colums: 12;
$grid-gap: (
    "0": 0,
    "1": 10px,
    "2": 20px,
    "3": 30px,
);

$breakpoints: (
    "xs": 0,
    "sm": 414px,
    "md": 600px,
    "lg": 1024px,
    "xl": 1280px,
    "xxl": 1440px,
    "xxxl": 1920px,
);


/*
veriables end
=================

// root
*/

:root {
    //
    @each $key, $value in $colors {
        --#{$key}: #{$value};
    }
    @each $key, $value in $primary-colors {
        --primary-#{$key}: #{$value};
    }
    @each $key, $value in $success-colors {
        --primary-#{$key}: #{$value};
    }
    @each $key, $value in $info-colors {
        --primary-#{$key}: #{$value};
    }
    @each $key, $value in $warning-colors {
        --primary-#{$key}: #{$value};
    }
    @each $key, $value in $error-colors {
        --primary-#{$key}: #{$value};
    }
    @each $key, $value in $light-grey-colors {
        --primary-#{$key}: #{$value};
    }
    @each $key, $value in $dark-grey-colors {
        --primary-#{$key}: #{$value};
    }
}

/*
background-color and test -color class
*/
// Loop backgroundcolor class
@each $cellore, $value in $colors {
    .#{$cellore} {
        background-color: $value;
    }
}
@each $key, $value in $primary-colors {
    .primary_#{$key} {
        background-color: $value;
    }
    .text_primary_#{$key} {
        color: $value;
    }
}
@each $key, $value in $success-colors {
    .success_#{$key} {
        background-color: $value;
    }
    .text_success_#{$key} {
        color: $value;
    }
}
@each $key, $value in $info-colors {
    .info_#{$key} {
        background-color: $value;
    }
    .text_info_#{$key} {
        color: $value;
    }
}
@each $key, $value in $warning-colors {
    .warning_#{$key} {
        background-color: $value;
    }
    .text_warning_#{$key} {
        color: $value;
    }
}
@each $key, $value in $error-colors {
    .text_error_#{$key} {
        color: $value;
    }
    .error_#{$key} {
        background-color: $value;
    }
}
@each $key, $value in $dark-grey-colors {
    .dark_grey_#{$key} {
        background-color: $value;
    }
    .text_dark_grey_#{$key} {
        color: $value;
    }
}
@each $key, $value in $light-grey-colors {
    .light_grey_#{$key} {
        background-color: $value;
    }
    .text_light_grey_#{$key} {
        color: $value;
    }
}

// Loopcolor class
@each $cellore, $value in $colors {
    .text_#{$cellore} {
        color: $value;
    }
}
// fondt size regular
@each $font, $value in $font-size {
    .font_regular_#{$font} {
        font-size: $value;
        font-style: normal;
        font-weight: 400;
        line-height: 160%;
    }
}
// Font Weights: Medium
@each $font, $value in $font-size {
    .font_medium_#{$font} {
        font-size: $value;
        font-style: normal;
        font-weight: 500;
        line-height: 160%;
    }
}
// Font Weights: Semibold
@each $font, $value in $font-size {
    .font_semibold_#{$font} {
        font-size: $value;
        font-style: normal;
        font-weight: 600;
        line-height: 160%;
    }
}
@each $font, $value in $font-size {
    .font_bold_#{$font} {
        font-size: $value;
        font-style: normal;
        font-weight: 700;
        line-height: 160%;
    }
}
/* 
Body  and tags
===================
*/
* {
    margin: 0;
    padding: 0;
    box-sizing: border-box;
}
body {
    margin: 0;
    padding: 0;
    font-family: "General Sans", sans-serif;
    font-size: 1rem;
    font-weight: 400;
    // line-height: 1.5;

}
hr {
    margin: 1rem 0;
    color: inherit;
    background-color: currentcellor;
    border: 0;
    opacity: 0.25;
}

hr:not([size]) {
    height: 1px;
}

h6,
.h6,
h5,
.h5,
h4,
.h4,
h3,
.h3,
h2,
.h2,
h1,
.h1 {
    margin-top: 0;
    margin-bottom: 0.5rem;
    font-weight: 500;
    line-height: 1.2;
}
// p {
//     margin-top: 0;
//     margin-bottom: 1rem;
// }

// utility

// margin
@each $key, $value in $spacers {
    .m_#{$key} {
        margin: $value;
    }
    .mx_#{$key} {
        margin-left: $value;
        margin-right: $value;
    }
    .my_#{$key} {
        margin-top: $value;
        margin-bottom: $value;
    }
    .mt_#{$key} {
        margin-top: $value;
    }
    .mb_#{$key} {
        margin-bottom: $value;
    }
    .mr_#{$key} {
        margin-right: $value;
    }
    .ml_#{$key} {
        margin-left: $value;
    }
}
// padding
@each $key, $value in $spacers {
    .p_#{$key} {
        padding: $value;
    }
    .px_#{$key} {
        padding-left: $value;
        padding-right: $value;
    }
    .py_#{$key} {
        padding-top: $value;
        padding-bottom: $value;
    }
    .pt_#{$key} {
        padding-top: $value;
    }
    .pb_#{$key} {
        padding-bottom: $value;
    }
    .pr_#{$key} {
        padding-right: $value;
    }
    .pl_#{$key} {
        padding-left: $value;
    }
}
// border

@each $key, $value in $border-widths {
    .border_#{$key} {
        border: $value solid;
        border-color: #999;
    }
}
@each $key, $value in $border {
    .#{$key} {
        #{$value}: 1px solid #999;
    }
}
@each $key, $value in $colors {
    .border_#{$key} {
        border-color: $value;
    }
}

.radius_6 {
    border-radius: 0.375rem;
}
.radius_12 {
    border-radius: 0.75rem;
}
.rounded {
    border-radius: 1.5rem;
}
.radius_left_cap {
    border-radius: 0px 1.5rem 1.5rem 0px;
}
.radius_right_cap {
    border-radius: 1.5rem 0px 0px 1.5rem;
}
// width
@for $val from 1 to 100 {
    .width_#{$val} {
        width: #{$val}#{"%"};
    }
}
//
.height_20 {
    height: 50px;
}

/* 
Layout 
===================
*/
$display: block, inline, flex, inline-block, grid, none;
$float: (
    "float_left": "left",
    "float_right": "right",
    "float_none": "none",
);
$flex: (
    "flex_1": "1 1 0%",
    "flex_auto": "1 1 auto",
    "flex_initial": "0 1 auto",
    "flex_none": "none",
);
$layout-value-align-item: flex-start, flex-end, center;
$flex-direction: (
    "row": row,
    "row_reverse": row-reverse,
    "cellumn_reverse": cellumn-reverse,
    "cellumn": cellumn,
);
$layout-value-justify-contend: (
    "flex_start": flex-start,
    "flex_end": flex-end,
    "center": center,
    "space_between": space-between,
    "space_around": space-around,
);
// cell class
@mixin xs {
    @media (min-width: map-get($breakpoints, "xs")) {
        @content;
    }
}
@mixin sm {
    @media (min-width: map-get($breakpoints, "sm")) {
        @content;
    }
}
@mixin md {
    @media (min-width: map-get($breakpoints, "md")) {
        @content;
    }
}
@mixin lg {
    @media (min-width: map-get($breakpoints, "lg")) {
        @content;
    }
}
@mixin xl {
    @media (min-width: map-get($breakpoints, "xl")) {
        @content;
    }
}
@mixin xxl {
    @media (min-width: map-get($breakpoints, "xxl")) {
        @content;
    }
}
@mixin xxxl {
    @media (min-width: map-get($breakpoints, "xxxl")) {
        @content;
    }
}

.container {
    width: 90%;
    margin: 0 auto;
    padding: 0 1rem;
}

.row {
    display: flex;
    flex-flow: row wrap;
    margin: 1rem 0;
}
// display
@each $var in $display {
    @if $var == inline-block {
        .display_inline_block {
            display: #{$var};
        }
    } @else {
        .display_#{$var} {
            display: #{$var};
        }
    }
}
// float
@each $key, $var in $float {
    .#{$key} {
        float: $var;
    }
}
// flex
@each $key, $var in $flex {
    .#{$key} {
        flex: $var;
    }
}


@each $key, $vale in $flex-direction {
    .flex_dir_#{$key} {
        flex-direction: $vale;
    }
}

// justify contend class
@each $key, $var in $layout-value-justify-contend {
    .justify_#{$key} {
        justify-content: #{$var};
    }
}
// alighitem

@each $var in $layout-value-align-item {
    .align_#{$var} {
        align-items: #{$var};
    }
}
@each $var in $layout-value-align-item {
    .text_align_#{$var} {
        text-align: #{$var};
    }
}

@include xs {
    @for $i from 1 through $grid-colums {
        .cell_#{$i}_xs {
            flex: 0 0 100% / 12 * $i;
        }
    }
}
@include sm {
    @for $i from 1 through $grid-colums {
        .cell_#{$i}_sm {
            flex: 0 0 100% / $grid-colums * $i;
        }
    }
}
@include md {
    @for $i from 1 through $grid-colums {
        .cell_#{$i}_md {
            flex: 0 0 100% / $grid-colums * $i;
        }
    }
}
@include lg {
    @for $i from 1 through $grid-colums {
        .cell_#{$i}_lg {
            flex: 0 0 100% / $grid-colums * $i;
        }
    }
}
@include xl {
    @for $i from 1 through $grid-colums {
        .cell_#{$i}_xl {
            flex: 0 0 100% / $grid-colums * $i;
        }
    }
}
@include xxl {
    @for $i from 1 through $grid-colums {
        .cell_#{$i}_xxl {
            flex: 0 0 100% / $grid-colums * $i;
        }
    }
}
@include xxxl {
    @for $i from 1 through $grid-colums {
        .cell_#{$i}_xxxl {
            flex: 0 0 100% / $grid-colums * $i;
        }
    }
}

@each $key, $value in $grid-gap {
    .gap_#{$key} > * {
        padding: $value;
    }
    .gap_#{$key} {
        margin-left: -$value;
        margin-right: -$value;
    }
}

// .grid {
//     display: block;

//     @media (max-width: $grid-tablet-600) {
//         display: grid;
//         grid-gap: 16px;
//         grid-template-colums: repeat(1, 1fr);
//     }
//     @media (min-width: $grid-tablet-600) {
//         display: grid;
//         grid-gap: 16px;
//         grid-template-colums: repeat(2, 1fr);
//     }
//     @media (min-width: $grid-tablet-720) {
//         display: grid;
//         grid-gap: 16px;
//         grid-template-colums: repeat(3, 1fr);
//     }
//     @media (min-width: $grid-tablet-1024) {
//         display: grid;
//         grid-gap: 16px;
//         grid-template-colums: repeat(4, 1fr);
//     }
//     @media (min-width: $grid-desktop-1280) {
//         display: grid;
//         grid-gap: 16px;
//         grid-template-colums: repeat(5, 1fr);
//     }
//     @media (min-width: $grid-desktop-1920) {
//         display: grid;
//         grid-gap: 16px;
//         grid-template-colums: repeat(6, 1fr);
//     }
// }
/* 
Link
===================
*/
.link {
    text-decoration: none;
    color: $info;
    &:hover {
        color: $info-300;
    }
}
.link_underline {
    text-decoration: underline;
    color: $info;
    &:hover {
        color: $info-300;
    }
}
@each $key, $value in $colors {
    .link_#{$key} {
        color: $value;
        text-decoration: none;
        &:hover {
            color: #{map-get($link-hover-bg, $key)};
        }
    }
}

/* 
Button 
===================
*/
$btn-lg-font: 16px;
$btn-md-font: 14px;
$btn-sm-font: 12px;
// @mixin btn_size {
//     @media (min-width: map-get($breakpoints, "md")) {
//         @content;
//     }
// }

@include xs {
    .btn {
        font-size: $btn-sm-font;
    }
}
@include md {
    .btn {
        font-size: $btn-md-font;
    }
}
@include lg {
    .btn {
        font-size: $btn-lg-font;
    }
}

button {
    &:disabled,
    [disabled] {
        background-color: rgb(229, 229, 229);
        cursor: not-allowed;
        pointer-events: none;
    }
}
.btn {
    display: inline-block;
    cursor: pointer;
    align-items: center;
    // width: 23.438rem;
    // height: 3rem;
    text-align: center;
    text-decoration: none;
    vertical-align: middle;
    font-weight: 600;
    padding: 0.625rem 1rem;
    box-shadow: 0px 1px 1px rgba(0, 0, 0, 0.08);
    border: 0;
    border: none;
    &:disabled,
    [disabled],
    &.disabled,
    fieldset:disabled & {
        background-color: $light-grey-400;
        color: $light-grey-600;
        border: 0;
        pointer-events: none;
        // opacity: ;
    }

    &:focus {
    }
}

@mixin button-variant($background) {
    @if $background == $light-grey {
        color: black;
    } @else {
        color: white;
    }
    background-color: $background;
}
@mixin button-border-variant($cellor) {
    color: $cellor;
    border: 1px solid $cellor;
}
@mixin button-outline-variant($color) {
    color: $color;
    border: 1px solid $color;
}

@each $cellor, $value in $colors {
    .btn_#{$cellor} {
        @include button-variant($value);
    }
}
@each $cellor, $value in $btn-hover {
    .btn_#{$cellor}:hover {
        background-color: $value;
    }
}
@each $cellor, $value in $colors {
    .btn_border_#{$cellor} {
        @include button-border-variant($value);
    }
}
@each $cellor, $value in $btn-hover {
    .btn_border_#{$cellor}:hover {
        border-color: $value;
        color: $value;
        background-color: #{map-get($btn-hover-bg, $cellor)};
    }
}
@each $color, $value in $colors {
    .btn_outline_#{$color} {
        @include button-outline-variant($value);
    }
}
@each $color, $value in $btn-hover {
    .btn_outline_#{$color}:hover {
        border-color: $value;
        color: $value;
        background-color: #{map-get($btn-hover-bg,$color )};
    }
}

.btn :active,
.active {
    color: blueviolet;
    background-color: brown;
}
/* 
Label 
===================
*/
// veriable
$lable_size_lg: 0.875rem;
$lable_sixe_sm: 0.75rem;

label {
    size: 1.25px;
    line-height: 2rem;
    font-weight: 600;
}

// input,
// button,
// select,
// optgroup,
// textarea {
//     // margin: 0;

//     line-height: inherit;
// }
input,
textarea {
    margin: 0.5rem;
    border: 1px solid #e2e4e8;
    border-radius: 0.375rem;
    font-weight: 600;
    font-family: inherit;
    line-height: 160%;
    width: 375px;
    outline: none;
    resize: auto;
    // align-self: stretch;
    &:focus {
        border: 1px solid $primary;
        box-shadow: 0px 2px 2px -1px rgba(0, 0, 0, 0.12), 0px 0px 0px 3px #dcd4ff;
        color: #0f1d40;
    }
    &:disabled,
    &.disabled {
        background-color: $light-grey-400;
        color: $light-grey-600;
        border: 0;
        pointer-events: none;
    }
}
@include xs {
    input {
        height: 32px;
        font-size: 12px;
        padding: 0 0.5rem;
    }
    textarea {
        height: 96px;
        padding: 0 0.5rem;
    }
}
@include md {
    input {
        height: 40px;
        font-size: 14px;
        padding: 0 0.75rem;
    }
    textarea {
        height: 96px;
        padding: 0 0.75rem;
    }
}
@include xl {
    input {
        height: 48px;
        font-size: 16px;
        padding: 0 0.875rem;
    }
    textarea {
        padding: 0 0.875rem;
        height: 135px;
    }
}
.field_resting {
    border: 1px solid #e2e4e8;
    box-shadow: none;
    &:focus {
        border: 1px solid #e2e4e8;
        box-shadow: none;
    }
}
.field_active {
    border: 1px solid $primary;
    box-shadow: 0px 2px 2px -1px rgba(0, 0, 0, 0.12), 0px 0px 0px 3px #dcd4ff;
}
.field_success {
    border: 1px solid $success;
    box-shadow: 0px 2px 2px -1px rgba(0, 0, 0, 0.12), 0px 0px 0px 3px #bdf0e0;
    &:focus {
        border: 1px solid $success;
        box-shadow: 0px 2px 2px -1px rgba(0, 0, 0, 0.12), 0px 0px 0px 3px #bdf0e0;
    }
}
.field_warning {
    border: 1px solid $warning;
    box-shadow: 0px 1px 2px -1px rgba(0, 0, 0, 0.12), 0px 0px 0px 3px #ffdfdf;
    &:focus {
        border: 1px solid $warning;
        box-shadow: 0px 2px 2px -1px rgba(0, 0, 0, 0.12), 0px 0px 0px 3px #ffdfdf;
    }
}
